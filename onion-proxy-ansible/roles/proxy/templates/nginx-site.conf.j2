################################################
# Configuration file for the Tor reverse proxy
################################################

# WARNING! This file is generated by Ansible and should not be editted manually.

server {
  listen 127.0.0.1:80;
  server_name {{ onion_hostname }};
  server_tokens off;

  return 301 https://$server_name$request_uri;
}

# Redirect base HTTPS requests to WWW
server {
  listen 127.0.0.1:443 ssl http2;
  server_name {{ onion_hostname }};
  server_tokens off;

  ssl_certificate /etc/nginx/certs/{{ onion_hostname }}.cert;
  ssl_certificate_key /etc/nginx/certs/{{ onion_hostname }}.pem;
  ssl_session_timeout 5m;

  return 301 https://www.$server_name$request_uri;
}

{% for subdomain in enabled_subdomains %}
# This directive tells Nginx to use HTTP2 and SSL
server {
  listen 127.0.0.1:443 ssl http2;
  server_name {{ subdomain }}.{{ onion_hostname }};
  server_tokens off;

  ssl_certificate /etc/nginx/certs/{{ onion_hostname }}.cert;
  ssl_certificate_key /etc/nginx/certs/{{ onion_hostname }}.pem;
  ssl_session_timeout 5m;

  # Set a short cache on this nginx end so that we avoid fetching from
  # the real infrastructure when possible.
  # proxy_cache amnestyonion;
  # proxy_cache_valid any 5m;
  # proxy_cache_revalidate on;
  # proxy_cache_use_stale timeout updating;
  # proxy_cache_key $request_uri;
  # proxy_ignore_headers expires set-cookie;

  # Redirect donation pages back to clearnet
  location ~* "^\/([\w]{2})\/donate[\/]*$" {
    rewrite "^\/([\w]{2})\/donate[\/]*$" https://www.amnesty.org/$1/donate/ permanent;
  }
  location ~* "(\/(?:en|fr|ar|es|))?\/wp-admin(?:\/)?" { return 403; } # deny CMS
  location ~* "(\/(?:en|fr|ar|es|))?\/wp-login.php" { return 403; } # deny CMS

  # Rewrite the content of HTTP responses
  sub_filter_types text/css text/xml application/x-javascript application/javascript text/javascript application/json;
  sub_filter_once off;

  # Mark canonical tag
  sub_filter "rel=\"canonical\" href=\"https://{{ subdomain }}.{{ mapped_host }}" "-----CANONICALHTTPSAMNESTYADOTORG-----";
  # Rewrite original domain to onion
  {% for rewrite_sub in enabled_subdomains %}
  sub_filter 'https://{{ rewrite_sub }}.{{ mapped_host }}' 'https://{{ rewrite_sub }}.{{ onion_hostname }}';
  {% endfor %}

  # Restore the rel="canonical" tag
  sub_filter "-----CANONICALHTTPSAMNESTYADOTORG-----" "rel=\"canonical\" href=\"https://{{ subdomain }}.amnesty.org";

  location / {
    proxy_pass https://{{ subdomain }}.{{ mapped_host }};
    proxy_ssl_server_name on;

    # Make sure that nginx verifies the upstream TLS certificate
    proxy_ssl_verify on;
    proxy_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;

    proxy_cookie_domain {{ mapped_host }} {{ onion_hostname }};
    proxy_cookie_domain {{ subdomain }}.{{ mapped_host }} {{ subdomain }}.{{ onion_hostname }};
    proxy_redirect https://{{ subdomain }}.{{ mapped_host }}/ https://{{ subdomain }}.{{ onion_hostname }}/;

    # Override Accept-Encoding to not compress data, since the subs module can not replace
    proxy_set_header Accept-Encoding "";
    proxy_set_header X-Tor-Proxy true;

    more_clear_headers "Vary";
  }
}
{% endfor %}

# WARNING! This file is generated by Ansible and should not be editted manually.